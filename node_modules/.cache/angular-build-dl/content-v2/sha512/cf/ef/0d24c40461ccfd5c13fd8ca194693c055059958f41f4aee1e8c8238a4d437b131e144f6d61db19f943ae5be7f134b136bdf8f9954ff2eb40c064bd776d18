{"version":3,"sources":["webpack:///src/app/sign-up/sign-up.page.html","webpack:///src/app/sign-up/sign-up-routing.module.ts","webpack:///src/app/sign-up/sign-up.module.ts","webpack:///src/app/sign-up/sign-up.page.scss","webpack:///src/app/sign-up/sign-up.page.ts"],"names":["routes","path","component","SignUpPageRoutingModule","imports","forChild","exports","SignUpPageModule","declarations","SignUpPage","route","loadCtrl","alertCtrl","navCtrl","authService","http","phoneno","registerForm","fullname","validators","required","email","checkEmail","bind","checkPhoneNo","checkIsNumber","password","formData","FormData","append","value","console","log","create","keyboardClose","message","then","loadingEl","present","register","subscribe","resData","dismiss","valid","header","msg","buttons","text","handler","navigateBack","backdropDismiss","alertEl","role","control","post","url","result","setErrors","invalid_email","invalid_phoneno","isNaN","invalid_format","selector","template"],"mappings":"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","file":"sign-up-sign-up-module-es5.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar>\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button text=\\\"\\\" icon=\\\"chevron-back-outline\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>{{'register' | translate}}</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\t<form [formGroup]=\\\"registerForm\\\">\\n\\t<div class=\\\"form\\\">\\n\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Fullname</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"text\\\" formControlName=\\\"fullname\\\" required fullname placeholder=\\\"Enter Your Fullname\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('fullname').value && registerForm.get('fullname').touched\\\">\\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">*This field is required</ion-badge>\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Email</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"email\\\" formControlName=\\\"email\\\" required email placeholder=\\\"Please Enter Your Email\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('email').value && registerForm.get('email').touched\\\">\\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">*This field is required</ion-badge>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"registerForm.get('email').value && registerForm.get('email').touched && !registerForm.get('email').valid && !registerForm.get('email').hasError('invalid_email')\\\"> \\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">*Invalid email format</ion-badge>\\n\\t\\t\\t  </ion-item>\\n\\n\\t\\t\\t  <ion-item lines=\\\"none\\\" *ngIf=\\\"registerForm.get('email').value && registerForm.get('email').hasError('invalid_email')\\\">\\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">*This email already exist.</ion-badge>\\n\\t\\t\\t  </ion-item>\\n\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Phone Number</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"text\\\" formControlName=\\\"phoneno\\\" required placeholder=\\\"Please enter your phone number\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('phoneno').value && registerForm.get('phoneno').touched\\\">\\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">This field is required.</ion-badge>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"registerForm.get('phoneno').value && registerForm.get('phoneno').hasError('invalid_phonene')\\\">\\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">*This email already exist.</ion-badge>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"registerForm.get('phoneno').value && registerForm.get('phoneno').touched && !registerForm.get('phoneno').valid\\\">\\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">*Invalid format</ion-badge>\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Password</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"password\\\" formControlName=\\\"password\\\" required placeholder=\\\"Please enter your password\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('password').value && registerForm.get('password').touched\\\"> \\n\\t\\t\\t\\t<ion-badge color=\\\"danger\\\">This field is required.</ion-badge>\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t</ion-list>\\n\\t\\t<ion-button size=\\\"large\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\" expand=\\\"full\\\" class=\\\"btn\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\n\\t</div>\\n\\t</form>\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-mo-border\\\">\\n\\t\\t\\n</ion-footer>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignUpPage } from './sign-up.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignUpPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\t\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignUpPageRoutingModule } from './sign-up-routing.module';\n\nimport { SignUpPage } from './sign-up.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n\tTranslateModule,   \n    SignUpPageRoutingModule\n  ],\n  declarations: [SignUpPage]\n})\nexport class SignUpPageModule {}\n","export default \"ion-header ion-toolbar ion-buttons ion-back-button {\\n  --icon-font-size: 2.3rem !important;\\n}\\nion-header ion-toolbar ion-title {\\n  font-size: 1.12rem;\\n  letter-spacing: 0.5px;\\n}\\n.form {\\n  padding-top: 61px;\\n}\\n.form p {\\n  margin: 0;\\n  color: var(--text-dark-primary);\\n  font-weight: 500;\\n  font-size: 1.15rem;\\n  line-height: 24px;\\n  padding-bottom: 37px;\\n}\\n.error-message {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zeWF6d2FubWFyenVraS9Eb2N1bWVudHMvTW9iaWxlIEFwcC9lLWNvbW1lcmNlL2N1c3RvbWVyL3NyYy9hcHAvc2lnbi11cC9zaWduLXVwLnBhZ2Uuc2NzcyIsInNyYy9hcHAvc2lnbi11cC9zaWduLXVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQztFQUNDLG1DQUFBO0FDQUY7QURFQztFQUNDLGtCQUFBO0VBQ0EscUJBQUE7QUNBRjtBRElBO0VBQ0MsaUJBQUE7QUNERDtBREdDO0VBQ0MsU0FBQTtFQUNBLCtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7QUNERjtBREtBO0VBQ0MsVUFBQTtBQ0ZEIiwiZmlsZSI6InNyYy9hcHAvc2lnbi11cC9zaWduLXVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1oZWFkZXIgaW9uLXRvb2xiYXIge1xuXHRpb24tYnV0dG9ucyBpb24tYmFjay1idXR0b24ge1xuXHRcdC0taWNvbi1mb250LXNpemU6IDIuM3JlbSAhaW1wb3J0YW50O1xuXHR9XG5cdGlvbi10aXRsZXtcblx0XHRmb250LXNpemU6IDEuMTJyZW07XG5cdFx0bGV0dGVyLXNwYWNpbmc6IC41cHg7XG5cdH1cbn1cblxuLmZvcm0ge1xuXHRwYWRkaW5nLXRvcDogNjFweDtcblxuXHRwIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0Y29sb3I6IHZhcigtLXRleHQtZGFyay1wcmltYXJ5KTtcblx0XHRmb250LXdlaWdodDogNTAwO1xuXHRcdGZvbnQtc2l6ZTogMS4xNXJlbTtcblx0XHRsaW5lLWhlaWdodDogMjRweDtcblx0XHRwYWRkaW5nLWJvdHRvbTogMzdweDtcblx0fVxufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG5cdGNvbG9yIDogcmVkO1xufSIsImlvbi1oZWFkZXIgaW9uLXRvb2xiYXIgaW9uLWJ1dHRvbnMgaW9uLWJhY2stYnV0dG9uIHtcbiAgLS1pY29uLWZvbnQtc2l6ZTogMi4zcmVtICFpbXBvcnRhbnQ7XG59XG5pb24taGVhZGVyIGlvbi10b29sYmFyIGlvbi10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4xMnJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuNXB4O1xufVxuXG4uZm9ybSB7XG4gIHBhZGRpbmctdG9wOiA2MXB4O1xufVxuLmZvcm0gcCB7XG4gIG1hcmdpbjogMDtcbiAgY29sb3I6IHZhcigtLXRleHQtZGFyay1wcmltYXJ5KTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxLjE1cmVtO1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgcGFkZGluZy1ib3R0b206IDM3cHg7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormsModule, ControlContainer } from '@angular/forms';\nimport { LoadingController, AlertController, NavController } from '@ionic/angular';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss'],\n})\nexport class SignUpPage implements OnInit {\n\n  registerForm : FormGroup;\n\n  phoneno : string = '';\n\n  constructor(\n    private route: Router,\n    private loadCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private navCtrl : NavController,\n    private authService : AuthService,\n    private http : HttpClient\n    ) { }\n\n  ngOnInit() {\n\n    this.registerForm = new FormGroup({\n      fullname : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      email : new FormControl(null, {\n        validators : [Validators.required, this.checkEmail.bind(this)]\n      }),\n      // email : new FormControl(null, {\n      //   validators : [Validators.required]\n      // }),\n      phoneno : new FormControl(null, {\n        validators : [Validators.required, this.checkPhoneNo.bind(this), this.checkIsNumber.bind(this)]\n      }),\n      // phoneno : new FormControl(null, {\n      //   validators : [Validators.required]\n      // }),\n      password : new FormControl(null, {\n        validators : [Validators.required]\n      })  \n    })\n  }\n    \n  onSubmit(){\n    let formData = new FormData();\n    formData.append('action', 'register');\n    formData.append('email', this.registerForm.value.email);\n    formData.append('fullname', this.registerForm.value.fullname);\n    formData.append('phoneno', this.registerForm.value.phoneno);\n    formData.append('password', this.registerForm.value.password);\n\n    console.log(this.registerForm.value.phoneno);\n\n    this.loadCtrl.create({\n      keyboardClose: true,\n      message : 'Please wait..'\n    }).then(loadingEl => {\n      loadingEl.present();\n\n      this.authService.register(\n        this.registerForm.value\n      ).subscribe(resData => {\n        loadingEl.dismiss();\n        if(resData.valid){\n          this.alertCtrl.create({\n            header: 'Success',\n            message : resData.msg,\n            buttons:[\n              {\n                text: 'Continue',\n                handler: ()=>{\n                  this.navCtrl.navigateBack('/sign-in');\n                }\n              }\n            ],\n            backdropDismiss: false\n          }).then(alertEl => {\n            alertEl.present();\n          })\n        }else{\n          this.alertCtrl.create({\n            header: 'Oh-oh!',\n            message: resData.msg,\n            buttons: [\n              {\n                text: 'Okay',\n                role: 'Cancel'\n              }\n            ],\n            backdropDismiss: false\n          }).then(alertEl => {\n            alertEl.present();\n          })\n        }\n      });\n    })\n  }\n\n  checkEmail(control: FormControl){\n\n    let formData = new FormData();\n    formData.append('action','checkEmail');\n    formData.append('email', control.value);\n\n    this.http.post<{valid: boolean}>(environment.url, formData)\n    .subscribe(result=> {\n      if(result.valid){\n        control.setErrors({invalid_email: true});\n      }\n    })\n  }\n\n  checkPhoneNo(control: FormControl){\n    let formData = new FormData();\n    formData.append('action', 'checkPhoneNo');\n    formData.append('phoneno', control.value);\n\n    this.http.post<{valid : boolean}>(environment.url, formData)\n    .subscribe(result => {\n      if(result.valid){\n        control.setErrors({invalid_phoneno: true});\n      }\n    })\n  }\n\n  checkIsNumber(control : FormControl){\n    if (isNaN(control.value)){\n      return {invalid_format : true}\n    }\n\n    return null;\n  }\n\n\n}\n\n\n\n\n"]}