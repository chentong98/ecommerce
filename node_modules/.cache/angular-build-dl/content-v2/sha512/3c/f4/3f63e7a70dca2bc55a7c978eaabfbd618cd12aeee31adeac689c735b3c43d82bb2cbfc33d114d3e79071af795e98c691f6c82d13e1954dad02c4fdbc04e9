{"version":3,"sources":["webpack:///src/app/sign-up/sign-up.page.html","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/sign-up/sign-up-routing.module.ts","webpack:///src/app/sign-up/sign-up.module.ts","webpack:///src/app/sign-up/sign-up.page.scss","webpack:///src/app/sign-up/sign-up.page.ts"],"names":["AuthService","http","alertCtrl","_url","data","formData","FormData","append","fullname","email","phoneNo","password","post","providedIn","routes","path","component","SignUpPageRoutingModule","imports","forChild","exports","SignUpPageModule","declarations","SignUpPage","route","loadCtrl","navCtrl","authService","phoneno","registerForm","validators","required","value","create","keyboardClose","message","then","loadingEl","present","register","subscribe","resData","dismiss","valid","header","msg","buttons","text","handler","navigateBack","backdropDismiss","alertEl","role","selector","template"],"mappings":"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","file":"sign-up-sign-up-module-es5.js","sourcesContent":["export default \"<ion-header>\\n\\t<ion-toolbar>\\n\\t\\t<ion-buttons slot=\\\"start\\\">\\n\\t\\t\\t<ion-back-button text=\\\"\\\" icon=\\\"chevron-back-outline\\\"></ion-back-button>\\n\\t\\t</ion-buttons>\\n\\t\\t<ion-title>{{'register' | translate}}</ion-title>\\n\\t</ion-toolbar>\\n</ion-header>\\n\\n\\n<ion-content>\\n\\t<form [formGroup]=\\\"registerForm\\\">\\n\\t<div class=\\\"form\\\">\\n\\t\\t<ion-list lines=\\\"none\\\">\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Fullname</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"text\\\" formControlName=\\\"fullname\\\" required fullname placeholder=\\\"Enter Your Fullname\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('fullname').value && registerForm.get('fullname').toched\\\">\\n\\t\\t\\t\\t<small class=\\\"error-message\\\">*Please field the required field</small>\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Email</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"email\\\" formControlName=\\\"email\\\" required email placeholder=\\\"Please Enter Your Email\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('email').value && registerForm.get('email').toched\\\">\\n\\t\\t\\t\\t<small class=\\\"error-message\\\">*Please field the required field</small>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('email').value && registerForm.get('email').toched && !registerForm.get('email').valid\\\">\\n\\t\\t\\t\\t<small class=\\\"error-message\\\">*Incorrect email type. Please try again</small>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<!-- <ion-item lines=\\\"none\\\" *ngIf=\\\"registerForm.get('email').value && registerForm.get('email').hasError('invalid_email')\\\">\\n\\t\\t\\t\\t<small class=\\\"error-message\\\">This email already exist.</small>\\n\\t\\t\\t  </ion-item> -->\\n\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Phone Number</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"number\\\" formControlName=\\\"phoneno\\\" required phoneno placeholder=\\\"Please enter your phone number\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('phoneno').value && registerForm.get('phoneno').touched\\\">\\n\\t\\t\\t\\t<small class=\\\"error-message\\\">This field is required.</small>\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t\\t<ion-item lines=\\\"none\\\">\\n\\t\\t\\t\\t<ion-label mode=\\\"md\\\" position=\\\"stacked\\\">Password</ion-label>\\n\\t\\t\\t\\t<ion-input mode=\\\"md\\\" type=\\\"password\\\" formControlName=\\\"password\\\" required placeholder=\\\"Please enter your password\\\"></ion-input>\\n\\t\\t\\t</ion-item>\\n\\t\\t\\t<ion-item lines=\\\"none\\\" *ngIf=\\\"!registerForm.get('password').value && registerForm.get('password').touched\\\"> \\n\\t\\t\\t\\t<small class=\\\"error-message\\\">This field is required.</small>\\n\\t\\t\\t</ion-item>\\n\\n\\t\\t</ion-list>\\n\\t\\t<ion-button size=\\\"large\\\" type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\" expand=\\\"full\\\" class=\\\"btn\\\" (click)=\\\"onSubmit()\\\">Submit</ion-button>\\n\\t</div>\\n\\t</form>\\n</ion-content>\\n\\n<ion-footer class=\\\"ion-mo-border\\\">\\n\\t\\t\\n</ion-footer>\\n\";","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject } from 'rxjs';\nimport { AlertController, BooleanValueAccessor } from '@ionic/angular';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private _url : string = \"http://ecommerce.x-cow.com/api/action.php\";\n \n\n\n  constructor(\n    private http : HttpClient,\n    private alertCtrl : AlertController\n  ) { }\n\n  register(data : any){\n    let formData = new FormData();\n    formData.append('action', 'register');\n\n    formData.append('fullname', data.fullname);\n    formData.append('email', data.email);\n    formData.append('phoneno', data.phoneNo);\n    formData.append('password', data.password);\n\n    return this.http.post<{valid: boolean, msg : string}>(\n      this._url,\n      formData\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignUpPage } from './sign-up.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SignUpPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SignUpPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\n\t\nimport { IonicModule } from '@ionic/angular';\n\nimport { SignUpPageRoutingModule } from './sign-up-routing.module';\n\nimport { SignUpPage } from './sign-up.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n\tTranslateModule,   \n    SignUpPageRoutingModule\n  ],\n  declarations: [SignUpPage]\n})\nexport class SignUpPageModule {}\n","export default \"ion-header ion-toolbar ion-buttons ion-back-button {\\n  --icon-font-size: 2.3rem !important;\\n}\\nion-header ion-toolbar ion-title {\\n  font-size: 1.12rem;\\n  letter-spacing: 0.5px;\\n}\\n.form {\\n  padding-top: 61px;\\n}\\n.form p {\\n  margin: 0;\\n  color: var(--text-dark-primary);\\n  font-weight: 500;\\n  font-size: 1.15rem;\\n  line-height: 24px;\\n  padding-bottom: 37px;\\n}\\n.error-message {\\n  color: red;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zeWF6d2FubWFyenVraS9Eb2N1bWVudHMvTW9iaWxlIEFwcC9lLWNvbW1lcmNlL2N1c3RvbWVyL3NyYy9hcHAvc2lnbi11cC9zaWduLXVwLnBhZ2Uuc2NzcyIsInNyYy9hcHAvc2lnbi11cC9zaWduLXVwLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQztFQUNDLG1DQUFBO0FDQUY7QURFQztFQUNDLGtCQUFBO0VBQ0EscUJBQUE7QUNBRjtBRElBO0VBQ0MsaUJBQUE7QUNERDtBREdDO0VBQ0MsU0FBQTtFQUNBLCtCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxrQkFBQTtFQUNBLGlCQUFBO0VBQ0Esb0JBQUE7QUNERjtBREtBO0VBQ0MsVUFBQTtBQ0ZEIiwiZmlsZSI6InNyYy9hcHAvc2lnbi11cC9zaWduLXVwLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1oZWFkZXIgaW9uLXRvb2xiYXIge1xuXHRpb24tYnV0dG9ucyBpb24tYmFjay1idXR0b24ge1xuXHRcdC0taWNvbi1mb250LXNpemU6IDIuM3JlbSAhaW1wb3J0YW50O1xuXHR9XG5cdGlvbi10aXRsZXtcblx0XHRmb250LXNpemU6IDEuMTJyZW07XG5cdFx0bGV0dGVyLXNwYWNpbmc6IC41cHg7XG5cdH1cbn1cblxuLmZvcm0ge1xuXHRwYWRkaW5nLXRvcDogNjFweDtcblxuXHRwIHtcblx0XHRtYXJnaW46IDA7XG5cdFx0Y29sb3I6IHZhcigtLXRleHQtZGFyay1wcmltYXJ5KTtcblx0XHRmb250LXdlaWdodDogNTAwO1xuXHRcdGZvbnQtc2l6ZTogMS4xNXJlbTtcblx0XHRsaW5lLWhlaWdodDogMjRweDtcblx0XHRwYWRkaW5nLWJvdHRvbTogMzdweDtcblx0fVxufVxuXG4uZXJyb3ItbWVzc2FnZSB7XG5cdGNvbG9yIDogcmVkO1xufSIsImlvbi1oZWFkZXIgaW9uLXRvb2xiYXIgaW9uLWJ1dHRvbnMgaW9uLWJhY2stYnV0dG9uIHtcbiAgLS1pY29uLWZvbnQtc2l6ZTogMi4zcmVtICFpbXBvcnRhbnQ7XG59XG5pb24taGVhZGVyIGlvbi10b29sYmFyIGlvbi10aXRsZSB7XG4gIGZvbnQtc2l6ZTogMS4xMnJlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDAuNXB4O1xufVxuXG4uZm9ybSB7XG4gIHBhZGRpbmctdG9wOiA2MXB4O1xufVxuLmZvcm0gcCB7XG4gIG1hcmdpbjogMDtcbiAgY29sb3I6IHZhcigtLXRleHQtZGFyay1wcmltYXJ5KTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxLjE1cmVtO1xuICBsaW5lLWhlaWdodDogMjRweDtcbiAgcGFkZGluZy1ib3R0b206IDM3cHg7XG59XG5cbi5lcnJvci1tZXNzYWdlIHtcbiAgY29sb3I6IHJlZDtcbn0iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, Validators, FormsModule, ControlContainer } from '@angular/forms';\nimport { LoadingController, AlertController, NavController } from '@ionic/angular';\nimport { AuthService } from '../auth/auth.service';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.page.html',\n  styleUrls: ['./sign-up.page.scss'],\n})\nexport class SignUpPage implements OnInit {\n\n  registerForm : FormGroup;\n\n  phoneno : string = '';\n\n  constructor(\n    private route: Router,\n    private loadCtrl: LoadingController,\n    private alertCtrl: AlertController,\n    private navCtrl : NavController,\n    private authService : AuthService,\n    private http : HttpClient\n    ) { }\n\n  ngOnInit() {\n\n    this.registerForm = new FormGroup({\n      fullname : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      // email : new FormControl(null, {\n      //   validators : [Validators.required, this.checkEmail.bind(this)]\n      // }),\n      email : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      // phoneno : new FormControl(null, {\n      //   validators : [Validators.required, this.checkPhoneNo.bind(this)]\n      // }),\n      phoneno : new FormControl(null, {\n        validators : [Validators.required]\n      }),\n      password : new FormControl(null, {\n        validators : [Validators.required]\n      })  \n    })\n  }\n    \n  onSubmit(){\n    let formData = new FormData();\n    formData.append('action', 'register');\n    formData.append('email', this.registerForm.value.email);\n\n    this.loadCtrl.create({\n      keyboardClose: true,\n      message : 'Please wait..'\n    }).then(loadingEl => {\n      loadingEl.present();\n\n      this.authService.register(\n        this.registerForm.value\n      ).subscribe(resData => {\n        loadingEl.dismiss();\n        if(resData.valid){\n          this.alertCtrl.create({\n            header: 'Success',\n            message : resData.msg,\n            buttons:[\n              {\n                text: 'Continue',\n                handler: ()=>{\n                  this.navCtrl.navigateBack('/sign-in');\n                }\n              }\n            ],\n            backdropDismiss: false\n          }).then(alertEl => {\n            alertEl.present();\n          })\n        }else{\n          this.alertCtrl.create({\n            header: 'Oh-oh!',\n            message: resData.msg,\n            buttons: [\n              {\n                text: 'Okay',\n                role: 'Cancel'\n              }\n            ],\n            backdropDismiss: false\n          }).then(alertEl => {\n            alertEl.present();\n          })\n        }\n      });\n    })\n  }\n\n\n  // checkEmail(control: FormControl){\n  //   let formData = new FormData();\n  //   formData.append('action', 'checkEmail');\n  //   formData.append('email', control.value);\n  \n  //   this.http.post<{valid: boolean}>(environment.url, formData)\n  //   .subscribe(result=> {\n  //     if(result.valid){\n  //       ControlContainer.setErrors({invalid_email: true});\n  //     }\n  //   })\n  // }\n\n  // checkPhoneNo(control: FormControl){\n  //   let formData = new FormData();\n  //   formData.append('action', 'checkPhoneNo');\n  //   formData.append('phoneno', control.value);\n\n  //   this.http.postRequest(formData)\n  //   .subscribe(result => {\n  //     if(result.valid){\n  //       this.phoneno = result.user_phoneno;\n  //     }\n  //     else{\n  //       control.setErrors({invalid_phoneno: true});\n  //     }\n  //   })\n  // }\n}\n\n\n\n\n"]}